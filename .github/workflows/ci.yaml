name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  POETRY_VERSION: "1.1.12"
  PYTHON_VERSION: "3.10"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
      - name: Run tests
        run: |
          poetry run pytest -s tests

  release-check:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      release: ${{ steps.check.outputs.release }}

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Check release
        id: check
        run: |
          PACKAGE="$(poetry version)"
          NAME=${PACKAGE% *}
          VERSION=${PACKAGE#* }
          ALREADY_RELEASED=$(curl -s https://pypi.org/pypi/$NAME/json | jq ".releases | keys | any(. == \"$VERSION\")")
          echo "::set-output name=release::$([[ "$ALREADY_RELEASED" == "true" ]] && echo "" || echo $VERSION)"

  publish:
    needs: release-check
    runs-on: ubuntu-latest
    if: needs.release-check.outputs.release != ''

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          poetry install
          poetry build
          poetry publish
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: v${{ needs.release-check.outputs.release }}
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ needs.release-check.outputs.release }}
          tag_name: v${{ needs.release-check.outputs.release }}
          body: |
            See [changelog](https://github.com/${{ github.repository }}/blob/${{ needs.release-check.outputs.release }}/CHANGELOG.md).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
